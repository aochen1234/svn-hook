# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-09-08 05:44
from __future__ import unicode_literals

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='NewUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('profile', models.CharField(default='', max_length=256, verbose_name='profile')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ResultNumber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('all_data', models.IntegerField(default=0, verbose_name='累计数量')),
                ('wait_check_data', models.IntegerField(default=0, verbose_name='待检测数量')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '结果数量',
                'verbose_name_plural': '结果数量',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TestDomain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='名字')),
                ('content', models.CharField(blank=True, max_length=255, verbose_name='内容')),
                ('ruletype', models.CharField(choices=[('webshell', '后门检测'), ('domain', '域名检测')], max_length=255, verbose_name='规则类型')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '检验规则',
                'verbose_name_plural': '检验规则',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TestResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_id', models.CharField(max_length=255, null=True, verbose_name='事件id')),
                ('proplist_id', models.CharField(max_length=255, null=True, verbose_name='具体id')),
                ('host', models.TextField(null=True, verbose_name='原始域名')),
                ('sip', models.TextField(null=True, verbose_name='原始ip')),
                ('sloc', models.TextField(null=True, verbose_name='原始地址')),
                ('request_header', models.TextField(blank=True, max_length=4000, null=True, verbose_name='原始请求头')),
                ('pattition_time', models.DateTimeField(null=True, verbose_name='记录时间')),
                ('origin_url', models.TextField(blank=True, max_length=2000, null=True, verbose_name='原始url')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('is_check', models.BooleanField(default=False, verbose_name='是否查看')),
                ('is_target', models.BooleanField(default=False, verbose_name='是否目标')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('testdomain', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='testappp.TestDomain')),
            ],
            options={
                'verbose_name': '检测结果',
                'verbose_name_plural': '检测结果',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TestSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('host', models.CharField(max_length=255, verbose_name='IP')),
                ('port', models.CharField(max_length=255, verbose_name='端口')),
                ('username', models.CharField(max_length=255, verbose_name='用户名')),
                ('password', models.CharField(max_length=255, verbose_name='密码')),
                ('type', models.CharField(help_text='只支持Oracle数据库', max_length=255, verbose_name='数据库')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('table', models.CharField(help_text='Oracle下的数据表', max_length=255, verbose_name='数据表')),
                ('starttime', models.DateTimeField(null=True, verbose_name='检测起始时间')),
                ('lastid', models.CharField(max_length=255, verbose_name='检测ID')),
            ],
            options={
                'verbose_name': '检测配置',
                'verbose_name_plural': '检测配置',
                'ordering': ['-created_at'],
            },
        ),
    ]
